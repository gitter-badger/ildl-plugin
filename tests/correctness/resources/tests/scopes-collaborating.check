[[syntax trees at end of               ildl-commit]] // newSource1.scala
package test {
  object GCDTest extends Object {
    def <init>(): test.GCDTest.type = {
      GCDTest.super.<init>();
      ()
    };
    object IntPairAsLong extends Object with ildl.RigidTransformationDescription {
      def <init>(): test.GCDTest.IntPairAsLong.type = {
        IntPairAsLong.super.<init>();
        ()
      };
      type High = (Int, Int);
      type Repr = Long;
      def toRepr(pair: (Int, Int)): Long = scala.this.Predef.???();
      def toHigh(l: Long @ildl.high): (Int, Int) = scala.this.Predef.???()
    };
    object IntPairAsFloat extends Object with ildl.RigidTransformationDescription {
      def <init>(): test.GCDTest.IntPairAsFloat.type = {
        IntPairAsFloat.super.<init>();
        ()
      };
      type High = (Int, Int);
      type Repr = Float;
      def toRepr(pair: (Int, Int)): Float = scala.this.Predef.???();
      def toHigh(l: Float @ildl.high): (Int, Int) = scala.this.Predef.???()
    };
    private[this] val n1: Long = GCDTest.this.IntPairAsLong.toRepr(new (Int, Int)(1, 0));
    @ildl.internal.nobridge <stable> <accessor> def n1(): Long = GCDTest.this.n1;
    private[this] val n2: Float = GCDTest.this.IntPairAsFloat.toRepr(GCDTest.this.IntPairAsLong.toHigh(GCDTest.this.n1()));
    @ildl.internal.nobridge <stable> <accessor> def n2(): Float = GCDTest.this.n2
  }
}